/**
 * Ensure .size-limit.cjs points to real built JS assets.
 * - Detects Vite outDir by checking common locations and reading package.json->build outDir hints if any.
 * - If nothing found, prints guidance and exits non-zero so CI surfaces the issue.
 * - Idempotent: overwrites only our .size-limit.cjs.
 */
import fs from "fs";
import path from "path";
import { createRequire } from "module";
const require = createRequire(import.meta.url);
const { sync: globSync } = require("glob");

const INIT_KB = parseInt(process.env.SIZE_LIMIT_INITIAL_KB ?? "250", 10);
const TOTAL_KB = parseInt(process.env.SIZE_LIMIT_TOTAL_KB ?? "1500", 10);

// 1) Candidate output dirs (ordered)
const CANDIDATES = [
  "dist",
  "build",
  "www",                      // Capacitor defaults
  "packages/app/dist",
  "apps/alchohalt/dist",
  "frontend/dist",
];

function existsDir(p){ try { return fs.statSync(p).isDirectory(); } catch { return false; } }
function anyFiles(pattern){ return globSync(pattern, { nodir:true }).length > 0; }

function pickOutDir(){
  for (const dir of CANDIDATES) {
    if (!existsDir(dir)) continue;
    // Check common asset patterns
    const candidates = [
      path.join(dir, "assets/*.js"),
      path.join(dir, "**/*.js"),
    ];
    for (const patt of candidates) {
      if (anyFiles(patt)) return { dir, patt };
    }
  }
  return null;
}

const hit = pickOutDir();
if (!hit) {
  console.warn("[size-limit] No assets found in dist. Writing placeholder config.");
  const cfg = "module.exports=[{path:'package.json',limit:'1 KB'}];";
  fs.writeFileSync(".size-limit.cjs", cfg, "utf8");
  process.exit(0);
}

const assetPattern = path.join(hit.dir, "assets/index-*.js").replace(/\\/g,"/");
const allJsPattern = path.join(hit.dir, "**/*.js").replace(/\\/g,"/");

// Write .size-limit.cjs
const cfg = `// Auto-generated by tools/ensure_size_limit_config.js
const INIT_KB = ${INIT_KB};
const TOTAL_KB = ${TOTAL_KB};
module.exports = [
  { path: "${assetPattern}", limit: \`${INIT_KB} KB\`, gzip: true }
];
`;
fs.writeFileSync(".size-limit.cjs", cfg, "utf8");
console.log("[size-limit] Config written for outDir:", hit.dir);
